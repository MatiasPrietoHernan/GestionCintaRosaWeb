// <auto-generated />
using System;
using CapaDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaDatos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250227125917_fixingRelations")]
    partial class fixingRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaDatos.Modelos.Consultas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("idPaciente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("idPaciente");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Diagnosticos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultasId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaDiagnostico")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultasId");

                    b.HasIndex("IdConsulta")
                        .IsUnique();

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("CapaDatos.Modelos.HistorialConsultas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FechaHistorial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdConsultas")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdConsultas");

                    b.HasIndex("IdPaciente");

                    b.ToTable("HistorialConsultas");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Medicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasFilter("[UsuarioId] IS NOT NULL");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Pacientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipoSangre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasFilter("[UsuarioId] IS NOT NULL");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Pagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FechaPago")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Tratamientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<string>("NombreTratamiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdConsulta");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Consultas", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Medicos", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaDatos.Modelos.Pacientes", "Paciente")
                        .WithMany("Consulta")
                        .HasForeignKey("idPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Diagnosticos", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Consultas", null)
                        .WithMany("Diagnosticos")
                        .HasForeignKey("ConsultasId");

                    b.HasOne("CapaDatos.Modelos.Consultas", "Consulta")
                        .WithOne()
                        .HasForeignKey("CapaDatos.Modelos.Diagnosticos", "IdConsulta");

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("CapaDatos.Modelos.HistorialConsultas", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Consultas", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsultas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CapaDatos.Modelos.Pacientes", "Paciente")
                        .WithMany("HistorialConsultas")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Consulta");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Medicos", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Usuarios", "Usuario")
                        .WithOne()
                        .HasForeignKey("CapaDatos.Modelos.Medicos", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Pacientes", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Usuarios", "Usuario")
                        .WithOne()
                        .HasForeignKey("CapaDatos.Modelos.Pacientes", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Pagos", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Consultas", "Consulta")
                        .WithMany("Pagos")
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Tratamientos", b =>
                {
                    b.HasOne("CapaDatos.Modelos.Consultas", "Consulta")
                        .WithMany("Tratamientos")
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CapaDatos.Modelos.Pacientes", "Paciente")
                        .WithMany("Tratamientos")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Consulta");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Consultas", b =>
                {
                    b.Navigation("Diagnosticos");

                    b.Navigation("Pagos");

                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Medicos", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("CapaDatos.Modelos.Pacientes", b =>
                {
                    b.Navigation("Consulta");

                    b.Navigation("HistorialConsultas");

                    b.Navigation("Tratamientos");
                });
#pragma warning restore 612, 618
        }
    }
}
